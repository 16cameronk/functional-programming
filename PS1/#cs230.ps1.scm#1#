#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 76 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Inconsolata\0"
0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 55 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 190 190 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 107 142 35 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 100 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 100 149 237 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 65 105 225 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 70 130 180 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 47 79 79 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 139 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 75 0 130 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 32 240 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 250 128 114 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 184 134 11 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 128 128 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 169 169 169 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 933 0 17 3 75
(
 #";;; Go to Language, Choose Language, Other Languages, Swindle, Full "
 #"Swindle"
) 0 0 23 29 1 #"\n"
0 0 17 3 58
#";;; This may have to be done in cs230-graphics.scm as well"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";;; cs230.ps1.scm"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 11 #"racket/base"
0 0 23 3 2 #") "
0 0 17 3 38 #";;This allows the type system to work."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 2 #" ("
0 0 14 3 4 #"file"
0 0 23 3 1 #" "
0 0 19 3 20 #"\"cs230-graphics.scm\""
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 17 3 60
#";;Pull in the definitions for the drawing window and stuff. "
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; Assumes"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"file"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"same"
0 0 17 3 1 #" "
0 0 17 3 11 #"directory. "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";; Here are the procedures you will modify in the problem set"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"side"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 23 3 3 #" (("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 14 3 9 #"<integer>"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 6 #"drawto"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 23 3 3 #" (("
0 0 14 3 5 #"len/3"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 5 #"lvl-1"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 2 #") "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 2 #") "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 5 #"lvl-1"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"snowflake:0"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 23 3 3 #" (("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 14 3 9 #"<integer>"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.0"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 2 #") "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 3 #")) "
0 0 14 3 5 #"level"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Problem 1"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"flip-side"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 23 3 3 #" (("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 14 3 9 #"<integer>"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 6 #"drawto"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 23 3 3 #" (("
0 0 14 3 7 #"len/sq2"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 8 #"2len/sq2"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #"("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 5 #"lvl-1"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 7 #"len/sq2"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/4"
0 0 23 3 2 #") "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 8 #"2len/sq2"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 7 #"len/sq2"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/4"
0 0 23 3 2 #") "
0 0 14 3 5 #"lvl-1"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 18 #"square-snowflake:1"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 23 3 3 #" (("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 14 3 9 #"<integer>"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.0"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/2"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 2 #"PI"
0 0 23 3 2 #") "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/2"
0 0 23 3 2 #") "
0 0 14 3 5 #"level"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Problem 2"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"snowflake:2"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 23 3 3 #" (("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 14 3 9 #"<integer>"
0 0 23 3 3 #") ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 10 #"<function>"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.0"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 2 #") "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 3 #")) "
0 0 14 3 5 #"level"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 18 #"square-snowflake:2"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 23 3 3 #" (("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 14 3 9 #"<integer>"
0 0 23 3 3 #") ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 10 #"<function>"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.0"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/2"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 2 #"PI"
0 0 23 3 2 #") "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/2"
0 0 23 3 2 #") "
0 0 14 3 5 #"level"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Problem 3"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 8 #"side-inv"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 23 3 3 #" (("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 14 3 9 #"<integer>"
0 0 23 3 3 #") ("
0 0 14 3 2 #"in"
0 0 23 3 1 #" "
0 0 14 3 8 #"<number>"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 6 #"drawto"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 23 3 3 #" (("
0 0 14 3 5 #"len/3"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 5 #"lvl-1"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" (("
0 0 14 3 9 #"positive?"
0 0 23 3 1 #" "
0 0 14 3 2 #"in"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"              (("
0 0 14 3 8 #"side-inv"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 8 #"side-inv"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 2 #") "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 8 #"side-inv"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 2 #") "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 8 #"side-inv"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"else"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 2 #") "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 2 #") "
0 0 14 3 5 #"lvl-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"side"
0 0 23 3 1 #" "
0 0 14 3 5 #"len/3"
0 0 23 3 1 #" "
0 0 14 3 7 #"heading"
0 0 23 3 1 #" "
0 0 14 3 5 #"lvl-1"
0 0 23 3 3 #")))"
0 0 14 3 1 #"r"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 13 #"snowflake-inv"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 23 3 3 #" (("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 6 #"<real>"
0 0 23 3 3 #") ("
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 14 3 9 #"<integer>"
0 0 23 3 3 #") ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 10 #"<function>"
0 0 23 3 3 #") ("
0 0 14 3 3 #"inv"
0 0 23 3 1 #" "
0 0 14 3 10 #"<function>"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"    "
0 0 17 3 10 #";(class-of"
0 0 17 3 2 #" ("
0 0 17 3 3 #"inv"
0 0 17 3 1 #" "
0 0 17 3 9 #"level))))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"    "
0 0 17 3 2 #";("
0 0 17 3 5 #"zero?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"inv"
0 0 17 3 1 #" "
0 0 17 3 9 #"level))))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"    "
0 0 17 3 2 #";("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #" ("
0 0 17 3 3 #"inv"
0 0 17 3 1 #" "
0 0 17 3 9 #"level))))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 20 3 3 #"0.0"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 2 #" ("
0 0 14 3 3 #"inv"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 2 #") "
0 0 14 3 5 #"level"
0 0 23 3 2 #" ("
0 0 14 3 3 #"inv"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"fn"
0 0 23 3 1 #" "
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 4 #"PI/3"
0 0 23 3 3 #")) "
0 0 14 3 5 #"level"
0 0 23 3 2 #" ("
0 0 14 3 3 #"inv"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";; Make the graphics window visible, and put the pen somewhere usefu"
 #"l"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 13 #"init-graphics"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 5 #"clear"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"moveto"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Problem 1"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";; ("
0 0 17 3 18 #"square-snowflake:1"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 2 #"3)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Problem 2"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; van Koch initiator with van Koch generator"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";; ("
0 0 17 3 11 #"snowflake:2"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 5 #"side)"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; (snowflake:0"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 2 #"3)"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; van Koch initiator with flip-side generator"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; (snowflake:2"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 10 #"flip-side)"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; square initiator with van Koch generator"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";; ("
0 0 17 3 18 #"square-snowflake:2"
0 0 17 3 1 #" "
0 0 17 3 3 #"200"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 5 #"side)"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; square initiator with flip-side generator"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";; ("
0 0 17 3 18 #"square-snowflake:2"
0 0 17 3 1 #" "
0 0 17 3 3 #"150"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 10 #"flip-side)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Problem 3"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; Test, it should look like the original snowflake"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 13 #"snowflake-inv"
0 0 23 3 1 #" "
0 0 20 3 3 #"150"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 14 3 8 #"side-inv"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 15 3 6 #"lambda"
0 0 23 3 3 #" (("
0 0 14 3 5 #"level"
0 0 23 3 1 #" "
0 0 14 3 9 #"<integer>"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 1 23 65 1 #"\t"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 4 #"odd?"
0 0 23 3 1 #" "
0 0 14 3 5 #"level"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0           0
